{"version":3,"file":"ng-textflow.js.map","sources":["ng://ng-textflow/ng-textflow/node.component.ts","ng://ng-textflow/ng-textflow/create-flow.service.ts","ng://ng-textflow/ng-textflow/ng-textflow.component.ts","ng://ng-textflow/ng-textflow/ng-textflow.module.ts"],"sourcesContent":["import { Component, OnInit, ElementRef, ViewChild, Renderer2, OnDestroy, HostBinding } from '@angular/core';\r\nimport { Observable, Subject, interval } from 'rxjs';\r\nimport { debounce } from 'rxjs/operators';\r\n\r\n// @dynamic\r\n@Component({\r\n  selector: 'app-node',\r\n  template: `\r\n    <div class=\"mask\" #maskTag [ngStyle]=\"hostStyle\">\r\n      <div *ngIf=\"showPageNumber && pageNumberAtTop\" [ngStyle]=\"numberStyle\">\r\n        {{pageNumber}}\r\n      </div>  \r\n      <div *ngIf=\"showHeading\" [ngStyle]=\"headingStyle\">\r\n        {{heading}}\r\n      </div>\r\n      <div #textref [ngStyle]=\"nodeStyle\" class=\"content\">\r\n        {{text}}\r\n        <div #dummy class=\"dummy\" >{{ dummyText }}</div>\r\n      </div>\r\n      <div *ngIf=\"showPageNumber && !pageNumberAtTop\" [ngStyle]=\"numberStyle\">\r\n        {{pageNumber}}\r\n      </div>\r\n    </div>\r\n`,\r\n  styles: [`\r\n    .content {\r\n      position: relative;\r\n      text-align-last: justify;\r\n      cursor: default;\r\n    }\r\n    .mask {\r\n      display block;\r\n      overflow: hidden;\r\n    }\r\n    :host {\r\n      display: block;\r\n      overflow: hidden;\r\n      user-select: none;\r\n    }\r\n    .dummy {\r\n      position: absolute;\r\n      background-color: rgba(155, 255, 155, 0.4);\r\n      left: 0px;\r\n      top: 0px;\r\n      visibility: hidden;\r\n    }\r\n  `]\r\n})\r\nexport class NodeComponent implements OnInit {\r\n  @ViewChild('textref') private textDivRef: ElementRef;\r\n  @ViewChild('dummy')  private dummyDivRef: ElementRef;\r\n  @ViewChild('maskTag') private mask: ElementRef;\r\n\r\n  private _index: number;  \r\n  private _heading: string = '';\r\n  private _isVisible: boolean = false;\r\n  private _pageNumberAtTop: boolean = false;\r\n  private changes: MutationObserver;\r\n  private padding: number;\r\n  \r\n  showHeading: boolean = true;\r\n  text: string;\r\n  showPageNumber: boolean;\r\n  isOverlaid: boolean;\r\n  pageNumber: number;\r\n\r\n  // Get host properties to dynamically change.\r\n  @HostBinding('style.position') hostPosition = '';\r\n  @HostBinding('style.visibility') hostVisibility = 'hidden';\r\n\r\n  // Dynamic styles.\r\n  numberStyle: any = {};\r\n  headingStyle: any = {};\r\n  nodeStyle: any = {};\r\n  hostStyle: any = {};\r\n\r\n  // Default style incase there is none supplied.\r\n  private defaultStyles = {\r\n    hostStyle: {},\r\n    contentStyle: {\r\n      'height': '9em',\r\n      'width': '200px',\r\n      'fontSize': '11px',\r\n      'wordSpacing': '2px',\r\n      'textAlign': 'justify',\r\n      'lineHeight': '1.1em',\r\n      'leftAlignLast': 'justified'\r\n    },\r\n    headingStyle: {\r\n      'font-size': '14px',\r\n      'height': '25px'\r\n    },\r\n    numberStyle: {\r\n      'font-size': '10px',\r\n    }\r\n  }; \r\n\r\n  // More text to put into nodes, so overflow.\r\n  private overflowSubject: Subject<string> = new Subject();\r\n  overflow: Observable<string> = this.overflowSubject as Observable<string>;\r\n\r\n  // Last node complete.\r\n  private static finishedSubject: Subject<null> = new Subject();\r\n  static finished: Observable<null> = NodeComponent.finishedSubject as Observable<null>;\r\n\r\n  // Heading has changed.\r\n  private static headingChangedSubject: Subject<null> = new Subject();\r\n  static headingChanged: Observable<null> = NodeComponent.headingChangedSubject.pipe(debounce(() => interval(10)));\r\n\r\n  // Inject services.\r\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) { };\r\n\r\n  ngOnInit() {    \r\n    // Some initialisation.\r\n    this.dummyText = this.text;\r\n    this.trimming = true;\r\n\r\n    // We use the mutation observer to see when our dummy text change has happened.\r\n    this.changes = new MutationObserver((mutations: MutationRecord[]) => this.manageState());\r\n    this.changes.observe(this.dummyDivRef.nativeElement, { attributes: true, childList: true, characterData: true });\r\n\r\n    // Kick off the state machine here, but with a delay for the first node,\r\n    // since the initial loading of the component causes some delay in other initialisation. (I think).\r\n    setTimeout(() => { // Wait till index is resolved.\r\n      // We need to pause for the first node since the loading is lazy?\r\n      if (this.index >= 99) {\r\n        setTimeout(() => this.manageState(), 200); // TODO: find a event driven method here.\r\n      } else {\r\n        // The following nodes do not need this delay.\r\n        this.manageState();\r\n      }\r\n    })\r\n  }\r\n\r\n  // Some getter/setter methods.\r\n  get dummyText(): string { return this.dummyDivRef.nativeElement.textContent; }\r\n  set dummyText(content: string) { this.dummyDivRef.nativeElement.textContent = content; }\r\n  \r\n  get isVisible(): boolean { return this._isVisible; }\r\n  set isVisible(value: boolean) {\r\n    this._isVisible = value;\r\n    this.hostVisibility = 'visible';\r\n  }\r\n\r\n  get index(): number { return this._index; }\r\n  set index(index: number) {\r\n    this.pageNumber = 100 - index;\r\n    setTimeout(() => {\r\n      this._index = Math.abs(index);\r\n      this.renderer.setStyle(this.elementRef.nativeElement, 'z-index', index); \r\n    });\r\n  }\r\n\r\n  get width(): number { return parseInt(this.mask.nativeElement.style.width.replace(/\\D/g, '')) }\r\n  set width(width: number) { this.renderer.setStyle(this.mask.nativeElement, 'width', `${width}px`) }\r\n  \r\n  get heading(): string { return this._heading; }\r\n  set heading(heading: string) { \r\n    this._heading = heading === '' ? this._heading = ' ' : this._heading = heading;\r\n    NodeComponent.headingChangedSubject.next();\r\n  }\r\n\r\n  get pageNumberAtTop(): boolean { return this._pageNumberAtTop; }\r\n  set pageNumberAtTop(value: boolean) {\r\n    this._pageNumberAtTop = value;\r\n    this.numberStyle['padding-bottom'] = this.pageNumberAtTop ? '0px' : `${this.padding}px`;\r\n    this.numberStyle['padding-top'] = this.pageNumberAtTop ? `${this.padding}px` : '0px';\r\n  }\r\n\r\n  // Apply the style to the current node. Assumes the correct attributes are contained.\r\n  applyStyle(style: any) {\r\n    this.nodeStyle = style.contentStyle ? this.convertStyleToPx(style.contentStyle) : this.convertStyleToPx(this.defaultStyles.contentStyle);\r\n    this.numberStyle = style.numberStyle ? style.numberStyle : this.defaultStyles.numberStyle;\r\n    this.hostStyle = style.hostStyle ? style.hostStyle : this.defaultStyles.hostStyle;\r\n    // Let's manipulate the padding style that was added to manage top or bottom placed numbering.\r\n    if (this.numberStyle.padding > '') {\r\n      this.padding = parseInt(this.numberStyle.padding.replace(/\\D/g, ''));\r\n    } else {\r\n      this.padding = 16;\r\n    }\r\n    this.numberStyle['padding-left'] = `${parseInt(this.nodeStyle.width.replace(/\\D/g, ''))/2}px`;\r\n    this.headingStyle = style.headingStyle ? style.headingStyle : this.defaultStyles.headingStyle;\r\n    this.headingStyle.width = this.nodeStyle.width;\r\n    this.renderer.setStyle(this.elementRef.nativeElement, 'width', style.width);\r\n    this.nodeStyle.overflow = 'hidden';\r\n    this.width = parseInt(this.nodeStyle.width.replace(/\\D/g, ''));\r\n    if (this.isOverlaid) {\r\n      this.hostPosition = 'absolute';\r\n    }\r\n  }\r\n\r\n  // Helper function to get em values into px values for simpler calculation later.\r\n  private convertStyleToPx(style: any): any {\r\n    let tempStyle = style;\r\n    // Get the fontSize of the style.\r\n    let fontSizeSuffix: string = tempStyle['fontSize'].replace(/[\\d\\.]/g, '');\r\n    let fontSize: number = parseFloat(tempStyle['fontSize'].replace(/[A-Za-z]/g,''));\r\n    \r\n    for (let key in tempStyle) {\r\n      // Not we need to check each value only, for em, pt, px etc..\r\n      if ((<string>tempStyle[key]).indexOf('em') > 0) {\r\n        let suffix = tempStyle[key].replace(/[\\d\\.]/g, '');\r\n        switch(suffix) {\r\n          case 'em': {\r\n            // Convert em value to px\r\n            let value: number = parseFloat(tempStyle[key].replace(/[A-Za-z]/g,''));\r\n            tempStyle[key] = `${Math.round(value*fontSize)}px`\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return tempStyle;\r\n  }\r\n\r\n  // Gets the lineHeight of the current node so we can do other trimming calculations.\r\n  private parseLineHeight(): number {\r\n    let lineHeight: string = this.textDivRef.nativeElement.style.lineHeight;\r\n    return parseInt(lineHeight.replace(/\\D/g, ''));\r\n  }\r\n  \r\n  // Produces a set of data about the current dummy div compated to the content div.\r\n  private compareDivs(): { 'lines': number, 'diffLines': number, 'words': number } {\r\n    let lineHeight = this.parseLineHeight();\r\n    let dummyLines = Math.floor(this.dummyDivRef.nativeElement.clientHeight / lineHeight);\r\n    let contentLines = Math.floor(this.textDivRef.nativeElement.clientHeight / lineHeight);\r\n    let dummyTextWordCount = this.dummyText.split(' ').length;\r\n\r\n    return {\r\n      'lines': dummyLines,\r\n      'diffLines': dummyLines - contentLines,\r\n      'words': dummyTextWordCount\r\n    };\r\n  }\r\n\r\n  // ------------------------ Trim loop test. -----------------------\r\n  //\r\n  // This is a small state machine to process the trimming algorithm.\r\n  //\r\n  private adding: boolean = false;\r\n  private finishing: boolean = false;\r\n  private trimming: boolean = false;\r\n  \r\n  private count: number = 100;\r\n\r\n  private manageState() {\r\n    // Protect against infinite loop.\r\n    if (this.count-- <= 0 ) {\r\n      this.trimming = false;\r\n      this.adding = false;\r\n      this.finishing = false;\r\n      console.log('ERROR - loop count > 100');\r\n    }\r\n    if (this.trimming) {\r\n      this.trim();\r\n    } else if (this.adding) {\r\n      this.addword();\r\n    } else if (this.finishing) {\r\n      this.finish();\r\n    }\r\n  }\r\n\r\n  private trim() {\r\n    let comps = this.compareDivs();\r\n    let wordsToRemove = Math.floor(comps.words/comps.lines) * (comps.diffLines + 1);\r\n    if (wordsToRemove > 0) {\r\n      this.dummyText = this.dummyText.split(' ').slice(0, comps.words - wordsToRemove).join(' ');\r\n    } else {\r\n      this.trimming = false;\r\n      this.adding = true;\r\n      this.addword();\r\n    }\r\n  }\r\n\r\n  private addword() {\r\n    let comps = this.compareDivs();\r\n    if (comps.diffLines <= -1) {\r\n      if (this.dummyText.length < this.text.length) {\r\n        this.dummyText = this.dummyText + ' ' + this.text.split(' ')[comps.words];\r\n      } else {\r\n        // This is the last node.\r\n        this.renderer.setStyle(this.textDivRef.nativeElement, 'textAlignLast', 'left');\r\n        NodeComponent.finishedSubject.next();\r\n      }\r\n    } else {\r\n      // Take off the last word again.\r\n      this.dummyText = this.dummyText.split(' ').slice(0, comps.words - 1).join(' ');\r\n      this.adding = false;\r\n      this.finishing = true;        \r\n    }\r\n  }\r\n\r\n  private finish() {\r\n    let comps = this.compareDivs();\r\n    let lastword: string[] = this.dummyText.split(' ');\r\n    let overflowArray = this.text.split(' ');\r\n    let overflow = overflowArray.slice(this.dummyText.split(' ').length).join(' ');\r\n    this.text = this.dummyText;\r\n    this.finishing = false;\r\n    this.overflowSubject.next(overflow);\r\n  }\r\n\r\n}\r\n","import { Injectable, Injector, ComponentFactoryResolver,\r\n         ComponentFactory, ViewContainerRef, ComponentRef, OnDestroy } from '@angular/core';\r\nimport { NodeComponent } from './node.component';\r\nimport { BehaviorSubject, Subject, Observable, Subscription } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class CreateFlowService implements OnDestroy {\r\n  private nodeList: NodeComponent[] = new Array<NodeComponent>();\r\n  private nodeFactory: ComponentFactory<NodeComponent>;\r\n  firstOnTop: boolean = true;\r\n\r\n  // Subscriptions\r\n  private finishedSubscription: Subscription; // For when the nodes are complete.\r\n  private headingChangedSubscription: Subscription; // For when the heading is externally changed.\r\n  private overFlowSubscriptions: Subscription[] = []; // During generation of nodes, fires when there are more nodes to generate.\r\n\r\n  // Provide an array of nodes once the generation is complete.\r\n  private nodesSubject: Subject<NodeComponent[]> = new BehaviorSubject<NodeComponent[]>(null);\r\n  nodes: Observable<NodeComponent[]> = this.nodesSubject as Observable<NodeComponent[]>;\r\n\r\n  constructor(private injector: Injector, private resolver: ComponentFactoryResolver) {\r\n    this.nodeFactory = this.resolver.resolveComponentFactory(NodeComponent);\r\n    \r\n    // When all nodes are finished generating, do some housework.\r\n    this.finishedSubscription =  NodeComponent.finished.subscribe(() => {\r\n      this.nodeList.forEach(node =>  node.isVisible = true); // Make all visible once complete.\r\n\r\n      // If headings are modified externally, then update sibling nodes to maintain consistent formating.\r\n      this.headingChangedSubscription = NodeComponent.headingChanged.subscribe(() => {\r\n        // Loop once to see if all are empty.\r\n        let count = 0;\r\n        this.nodeList.forEach(node => { \r\n          count = node.heading <= ' ' ? count + 1 : count - 1;\r\n        });\r\n\r\n        // Loop again to update the visibility of the headings.\r\n        this.nodeList.forEach(node => {\r\n          node.showHeading = count === this.nodeList.length ? false : true;\r\n        });\r\n      });\r\n\r\n      // Make list of nodes available once all are complete.\r\n      this.nodesSubject.next(this.nodeList);\r\n    });\r\n  } \r\n\r\n  clearNodes() {\r\n    this.nodeList = [];\r\n  }\r\n\r\n  // This will kick off a process that generates a node every time a generated node is too full and overflows with text.\r\n  createFlow(textPassage: string, \r\n             location: ViewContainerRef, \r\n             style: any, \r\n             showPageNumbers: boolean, \r\n             isOverlaid: boolean) {\r\n\r\n    let node: NodeComponent = this.createNode(textPassage, location, style, showPageNumbers, isOverlaid);\r\n    \r\n    // Create a new node if there is any overflow text from last node generated.\r\n    // Last node will know when it is the last one, and will \r\n    this.overFlowSubscriptions.push(node.overflow.subscribe(overflowText => {\r\n      if (overflowText) {\r\n        this.createFlow(overflowText, location, style, showPageNumbers, isOverlaid);\r\n      }\r\n    }));\r\n  }\r\n\r\n  private createNode(content: string,\r\n                     location?: ViewContainerRef, \r\n                     style?: any, showPageNumbers?: \r\n                     boolean, isOverlaid?: boolean): NodeComponent {\r\n                       \r\n    // Generate the node with the nodeFactory.\r\n    let nodeRef: ComponentRef<NodeComponent>;\r\n    if (location || location instanceof ViewContainerRef) {\r\n      nodeRef = location.createComponent(this.nodeFactory, undefined, this.injector);\r\n    } else {\r\n      nodeRef = this.nodeFactory.create(this.injector);\r\n    }\r\n    \r\n    // Update the node\r\n    nodeRef.instance.isOverlaid = isOverlaid;\r\n    nodeRef.instance.showPageNumber = showPageNumbers;\r\n    nodeRef.instance.text = content;\r\n    if (style) {\r\n      nodeRef.instance.applyStyle(style);\r\n    }\r\n    \r\n    // Add node to list of nodes and update its index value.\r\n    this.nodeList.push(nodeRef.instance);\r\n    nodeRef.instance.index = this.firstOnTop ? 100-this.nodeList.length : this.nodeList.length;\r\n\r\n    return nodeRef.instance;\r\n  }\r\n\r\n  // Tidy up subscriptions.\r\n  ngOnDestroy() {\r\n    this.finishedSubscription.unsubscribe();\r\n    this.headingChangedSubscription.unsubscribe();\r\n    this.overFlowSubscriptions.forEach(subscription => {\r\n      subscription.unsubscribe();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ViewChild, \r\n  ViewContainerRef,\r\n  Input} from '@angular/core';\r\nimport { CreateFlowService } from './create-flow.service';\r\n\r\n@Component({\r\n  selector: 'ng-textflow',\r\n  template: ` \r\n    <ng-container #viewContainer></ng-container>\r\n  `\r\n})\r\n// A basic component that uses the CreateFlowService to generate and display the nodes\r\n// based on the content provided in these inputs.\r\nexport class NgTextflowComponent {\r\n  @ViewChild('viewContainer', { read: ViewContainerRef}) viewContainer: ViewContainerRef;\r\n  @Input() nodeStyles: any = {};\r\n  @Input() firstOnTop: boolean = true;\r\n  @Input() showPageNumbers: boolean;\r\n  @Input() isOverlaid: boolean;\r\n  \r\n  // Content change handling.\r\n  private _content: string;\r\n  get content(): string { return this._content; }\r\n  @Input() set content(text: string) {\r\n    this._content = text;\r\n    // Clear the nodes out of the NodeComponent[] array.\r\n    this.nodeService.clearNodes();\r\n    this.viewContainer.clear();\r\n    this.nodeService.createFlow(this.content, this.viewContainer, this.nodeStyles, this.showPageNumbers, this.isOverlaid);    \r\n  }\r\n\r\n  constructor(private nodeService: CreateFlowService) {\r\n    nodeService.firstOnTop = this.firstOnTop;\r\n  } \r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n// Module components\r\nimport { NgTextflowComponent } from './ng-textflow.component';\r\nimport { NodeComponent } from './node.component';\r\n\r\n// Services\r\nimport { CreateFlowService } from './create-flow.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [NgTextflowComponent, NodeComponent],\r\n  entryComponents: [NodeComponent],\r\n  exports: [NgTextflowComponent]\r\n})\r\nexport class NgTextflowModule {\r\n\r\n  public static forRoot(): ModuleWithProviders {\r\n\r\n    return {\r\n      ngModule: NgTextflowModule,\r\n      providers: [ CreateFlowService ]\r\n    }\r\n  }\r\n\r\n }\r\n"],"names":[],"mappings":"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"}
